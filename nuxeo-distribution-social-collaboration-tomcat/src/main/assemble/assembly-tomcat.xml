<project name="nuxeo-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />


  <target name="init" unless="init.done">
    <tstamp />

    <property name="outdir" value="${maven.project.build.directory}" />
    <property name="stagedir" value="${outdir}/stage" />
    <property name="tomcat" value="nuxeo-social-collaboration-${maven.project.version}-tomcat" />
    <property name="tomcatdir" value="${stagedir}/${tomcat}" />
    <property name="nxserver" value="${tomcatdir}/nxserver" />
    <artifact:nuxeo-expand />
    <property name="init.done" value="true" />
  </target>

  <target name="build" depends="init" unless="no.build">
    <echo>Building Tomcat distribution...</echo>
    <delete dir="${stagedir}" />
    <unzip dest="${stagedir}">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-tomcat:${nuxeo.distribution.version}:zip"
                            classifier="nuxeo-dm" />
    </unzip>
    <move file="${stagedir}/nuxeo-dm-${nuxeo.distribution.version}-tomcat"
          tofile="${tomcatdir}" />

    <chmod dir="${tomcatdir}"
           perm="ug+x"
           includes="*.command,bin/*.sh,bin/*ctl,bin/*.command" />

    <!-- Nuxeo Social Collaboration -->
    <unzip dest="${tomcatdir}/nxserver">
      <artifact:resolveFile key="org.nuxeo.ecm.social:nuxeo-distribution-social-collaboration::zip" />
    </unzip>

    <unzip dest="${tomcatdir}/templates" overwrite="true">
      <artifact:resolveFile key="org.nuxeo.ecm.social:nuxeo-distribution-social-collaboration::zip"
                            classifier="resources" />
    </unzip>
    <echo append="true" file="${tomcatdir}/bin/nuxeo.conf">
nuxeo.templates=default,collaboration</echo>

    <antcall target="set-distribution-properties">
      <param name="distribution.properties.file"
             value="${tomcatdir}/templates/common/config/distribution.properties" />
      <param name="org.nuxeo.distribution.date" value="${DSTAMP}${TSTAMP}" />
    </antcall>

    <antcall target="reorganize-libs" />

    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip"
         basedir="${stagedir}"
         includes="${tomcat}/**" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}.zip"
                     type="zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}" />
  </target>

  <target name="set-distribution-properties">
    <echo append="true" file="${distribution.properties.file}">
org.nuxeo.distribution.date=${org.nuxeo.distribution.date}
</echo>
  </target>

  <target name="reorganize-libs">
    <!-- Add Tomcat specific requirements -->
    <copy todir="${tomcatdir}/nxserver/bundles" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="org.nuxeo*" />
        </includes>
      </artifact:set>
     </copy>
     <copy todir="${tomcatdir}/nxserver/lib" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="!org.nuxeo*" />
        </includes>
      </artifact:set>
    </copy>

    <nx:rmdups dir="${tomcatdir}/nxserver/lib" />

    <!-- remove libraries already provided by Tomcat or unneeded -->
    <delete>
      <fileset dir="${tomcatdir}/nxserver/lib">
        <!-- jetty is needed by vcs remote -->
        <!-- jetty-util is needed by jsp impl jar - which is referring jetty log classes -->
        <!-- jetty-naming has jndi properties conflicting with Tomcat -->
        <include name="jetty-naming*" />
        <include name="servlet-api*" />
        <include name="el-api*" />
        <include name="jsp-*" />
        <include name="juel-api-*" />
      </fileset>
    </delete>

    <!-- Move some libraries from nxserver to Tomcat default lib directory -->
    <move todir="${tomcatdir}/lib">
      <fileset dir="${tomcatdir}/nxserver/lib">
        <include name="log4j-*" />
        <include name="lucene-*" />
        <include name="commons-logging-*" />
        <include name="commons-lang-*" />
        <include name="freemarker-*" />
        <include name="mail-*" />
        <!-- move WSS front filter as external lib since it must be referenced from root Web context-->
        <include name="nuxeo-generic-wss-front*" />
     </fileset>
     <fileset dir="${tomcatdir}/nxserver/bundles">
       <include name="nuxeo-core-storage-sql-extensions-*" />
       <include name="nuxeo-runtime-tomcat-adapter*" />
     </fileset>
    </move>
    <nx:rmdups dir="${tomcatdir}/lib" />
  </target>

</project>
